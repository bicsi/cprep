#!/usr/bin/env python3

from commands import runall, create, evaluate, generate, clean
from lib.base import ProblemCfg
import argparse
import os 
import yaml
from colorama import Fore 
from lib import config


def parse_args():
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(help='commands')
    
    for command_module in [runall, create, evaluate, generate, clean]:
        name = command_module.__name__.split('.')[-1]
        subparser = subparsers.add_parser(
            name, parents=[command_module.parser])
        subparser.set_defaults(
            run=command_module.run, 
            command=name)

    return parser.parse_args()


if __name__ == "__main__":
    args = parse_args()
    config_path = os.path.join(os.path.dirname(__file__), "config.yaml")
    with open(config_path, 'r') as f:
        config.load(yaml.load(f, Loader=yaml.FullLoader))
        # cfg['base_dir'] = '' # os.path.relpath('.')
    cfg = None
    problem_config_file = config.get('problem_config_file')
    if os.path.exists(problem_config_file):
        with open(problem_config_file) as f:
            cfg = ProblemCfg(**yaml.load(f, Loader=yaml.FullLoader))
    elif args.command != 'create':
        print()
        print(f"{Fore.RED}[E]: You don't seem to be inside a problem directory ")
        print(f"  (file '{problem_config_file}' not found){Fore.RESET}")
        exit(6)
    try:
        args.run(cfg, args)
    except AssertionError as ex:
        print()
        print(f"{Fore.RED}[E]: {ex}{Fore.RESET}")
        exit(6)